{"version":3,"file":"static/js/985.8dc8a665.chunk.js","mappings":"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","sources":["pages/Contacts/Contacts.styled.js","components/ContactForm/ContactForm.styled.js","redux/Contact/selectors.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const PhoneTitle = styled.h1`\n    text-align: center;\n    font-family: Segoe UI;\n    font-weight: 700;\n    font-size: 48px;\n`;\n\nexport const Loader = styled.div`\n    display: flex;\n    justify-content: center;\n`;\n\n\nexport const MessageUser = styled.p`\n    text-align: center;\n    font-family: Segoe UI;\n    font-weight: 500;\n    font-size: 36px;\n    color: orangered;\n`;\n\n","import styled from \"styled-components\";\n\nexport const Form = styled.form`\ndisplay: flex;\nflex-direction: column;\ngap: 10px;\n\nbackground-color: rgb(241 241 241);\nborder: 1px solid rgb(209 201 255);\nborder-radius: 30px;\npadding-bottom: 20px;\npadding-top: 20px;\nwidth: 100%;\n&:hover{\n    box-shadow: 10px 11px 60px -3px rgba(0,0,0,0.75);\n    -webkit-box-shadow: 10px 11px 60px -3px rgba(0,0,0,0.75);\n    -moz-box-shadow: 10px 11px 60px -3px rgba(0,0,0,0.75);\n}\n`; \n\nexport const Button = styled.button`\n    font-size: 24px;\n    font-weight: 700;\n    font-family: Cambria;\n    color: orangered;\n    background-color: white; \n    border: 1px solid;\n    border-radius: 15px;\n    cursor: pointer;\n    text-transform: uppercase;\n    width: 200px;\n    height: 50px;\n    margin: 0 auto;\n    transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1), background-color 250ms cubic-bezier(0.4, 0, 0.2, 1), border-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    &:hover,\n    &:focus {\n        color: white;\n        background-color: orangered;\n        border-color: none;\n    }\n`;\n\nexport const LabelForm = styled.label`\n    font-family: Cambria;\n    font-weight: 700;\n    font-size: 24px;\n    margin: 0 auto;\n`; \n\nexport const InputForm = styled.input`\n    font-family: Cambria;\n    font-weight: 400;\n    font-size: 24px;\n    outline: none;\n    border: 2px solid gray;\n    border-radius: 15px;\n    width: 250px;\n    height: 25px;\n    margin: 0 auto;\n    padding: 8px 12px;\n    &:focus{\n    border: 3px solid rgba(255, 62, 0, 0.75);\n}\n`; \n\n","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const getFilterValue = state => state.filter;\nexport const getContactsValue = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const getAllContacts = createSelector([getContactsValue, getFilterValue], (contacts, filter) => {\n    return contacts.filter(contact =>\n        contact.name.toLowerCase().includes(filter.toLowerCase())\n    )\n});\n","import { useState } from \"react\";\nimport shortid from \"shortid\";\nimport { Form, Button, InputForm, LabelForm } from './ContactForm.styled';\nimport { addContact } from '../../redux/Contact/operations';\nimport { getContactsValue } from 'redux/Contact/selectors';\nimport { useSelector, useDispatch } from 'react-redux';\n\nexport const ContactForm = () => {\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n    const contacts = useSelector(getContactsValue);\n\n    const dispatch = useDispatch();\n    const id = shortid.generate();\n\n    const createContact = ({ name, number }) => ({\n        id: id,\n        name,\n        number,\n    });\n\n    const addContactToState = contact => dispatch(addContact(contact)); \n\n    const handleInputChange = e => {\n        const { name, value } = e.currentTarget;\n\n        switch (name) { \n            case 'name':\n                setName(value);\n                break;\n            \n            case 'number':\n                setNumber(value);\n                break;\n            \n            default:\n                return;\n        }\n    };\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        const userName = contacts.find(user => user.name.toLocaleLowerCase() === name.toLowerCase());\n    if (userName) {\n      alert(`${name} is already in contacs`);\n    } else {\n      addContactToState(createContact({ name, number }));\n      reset();\n    }\n  };\n\n    const reset = () => {\n        setName('');\n        setNumber('')\n    };\n\n        return (\n            <Form onSubmit={handleSubmit}>\n                <LabelForm> Name </LabelForm>\n                <InputForm\n                    type=\"text\"\n                    name=\"name\"\n                    value={name}\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                    required\n                    onChange={handleInputChange}\n                />\n\n                <LabelForm> Number </LabelForm>\n                \n                <InputForm\n                    type=\"tel\"\n                    name=\"number\"\n                    value={number}\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                    title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                    required\n                    onChange={handleInputChange}\n                />\n                <Button type=\"submit\"> Add contact </Button>\n            </Form>\n        );\n};\n","import styled from \"styled-components\";\n\nexport const LabelFilter = styled.label`\n    font-family: Cambria;\n    font-weight: 700;\n    font-size: 24px;\n\n    margin-right: 10px;\n`; \n\nexport const InputFilter = styled.input`\n    font-family: Cambria;\n    font-weight: 400;\n    font-size: 24px;\n    outline: none;\n    border: 2px solid gray;\n    border-radius: 15px;\n    padding: 8px 12px;\n    &:focus {\n    border: 3px solid rgba(255, 62, 0, 0.75);\n}\n`; \n","import { LabelFilter, InputFilter } from './Filter.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFilterValue } from 'redux/Contact/selectors';\nimport { setFilter } from 'redux/Contact/filterSlice';\n\nexport const Filter = () => {\n    const filterValue = useSelector(getFilterValue)\n    const dispatch = useDispatch();\n    \n  return (\n    <div>\n        <LabelFilter >Find contacts by name</LabelFilter>\n\n        <InputFilter\n              type=\"text\"\n              value={filterValue}\n              name=\"filter\"\n              onChange={(e) => dispatch(setFilter(e.target.value))}\n        />\n    </div>\n        );\n};\n\n","import styled from \"styled-components\";\n\nexport const List = styled.ul`\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n`; \n\nexport const Item = styled.li`\n    font-family: Cambria;\n    font-weight: 500;\n    font-size: 24px;\n    background-color: rgb(241, 241, 241);\n    border: 2px solid rgb(209 201 255);\n    border-radius: 20px;\n    margin-left: auto;\n    margin-right: auto;\n    padding: 10px;\n    width: 400px;\n    display: flex;\n    justify-content:space-between;\n    align-items: center;\n    &:hover{\n        box-shadow: 10px 11px 60px -3px rgba(0,0,0,0.75);\n-webkit-box-shadow: 10px 11px 60px -3px rgba(0,0,0,0.75);\n-moz-box-shadow: 10px 11px 60px -3px rgba(0,0,0,0.75);\n    }\n`; \n\nexport const Button = styled.button`\n    cursor: pointer;\n    border-radius: 15px;\n    border: 2px solid gray;\n    padding: 5px;\n    text-align: center;\n    font-family: Cambria;\n    font-weight: 700;\n    font-size: 24px;\n    &:active, \n    &:hover,\n    &:focus {\n        background-color: rgba(255, 62, 0, 0.75);\n        border: 2px solid rgba(255, 62, 0, 0.65);\n        color: white;\n        border-color: none;\n}`; \n\n","import { List, Item, Button } from './ContactList.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from '../../redux/Contact/operations';\nimport { getAllContacts } from 'redux/Contact/selectors';\n\nexport const ContactList = () => {\n    const contacts = useSelector(getAllContacts);\n    const dispatch = useDispatch();\n\n    return (\n        <>\n            <List >\n                {contacts.map(({ name, id, number }) => {\n                    return (\n                        <Item\n                            key={id}>\n                            {name} : {number}\n                            <Button\n                                type=\"button\"\n                                onClick={() => dispatch(deleteContact(id))}\n                            >\n                                Delete\n                            </Button>\n                        </Item>\n                    );\n                })}\n            </List>\n        </>\n    );\n};\n","import { PhoneTitle, Loader, MessageUser } from './Contacts.styled';\nimport { ContactForm } from '../../components/ContactForm/ContactForm';\nimport { Filter } from '../../components/Filter/Filter';\nimport { ContactList } from '../../components/ContactList/ContactList';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { ThreeDots } from 'react-loader-spinner';\nimport { fetchContacts } from \"../../redux/Contact/operations\";\nimport { getAllContacts, selectError, selectIsLoading } from '../../redux/Contact/selectors';\n\n\nexport default function Contacts() {\n  const contacts = useSelector(getAllContacts);\n  const error = useSelector(selectError);\n  const isLoading = useSelector(selectIsLoading);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        fontSize: 40,\n        color: '#010101'\n      }}\n    >\n      <div>\n        <PhoneTitle>Phonebook</PhoneTitle>\n        <ContactForm />\n        <PhoneTitle>Contacts</PhoneTitle>\n        <Filter />\n        {isLoading&&!error?<Loader><ThreeDots /></Loader>:<ContactList />}\n        {!contacts.length && <MessageUser>There are no contacts in the Phonebook</MessageUser>}\n      </div>\n    </div>\n  );\n};\n"],"names":["PhoneTitle","styled","Loader","MessageUser","Form","Button","LabelForm","InputForm","getFilterValue","state","filter","getContactsValue","contacts","items","selectIsLoading","isLoading","selectError","error","getAllContacts","createSelector","contact","name","toLowerCase","includes","ContactForm","useState","setName","number","setNumber","useSelector","dispatch","useDispatch","id","shortid","handleInputChange","e","currentTarget","value","reset","onSubmit","preventDefault","find","user","toLocaleLowerCase","alert","createContact","addContact","type","pattern","title","required","onChange","LabelFilter","InputFilter","Filter","filterValue","setFilter","target","List","Item","ContactList","map","onClick","deleteContact","Contacts","useEffect","fetchContacts","style","display","justifyContent","alignItems","fontSize","color","length"],"sourceRoot":""}